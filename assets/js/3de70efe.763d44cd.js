"use strict";(self.webpackChunkliveviewjs_com=self.webpackChunkliveviewjs_com||[]).push([[1247],{876:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(2784);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),h=i,v=c["".concat(s,".").concat(h)]||c[h]||d[h]||o;return r?n.createElement(v,a(a({ref:t},u),{},{components:r})):n.createElement(v,a({ref:t},u))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},9962:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7896),i=(r(2784),r(876));const o={sidebar_position:1},a="Let's Build a LiveView",l={unversionedId:"quick-starts/get-liveviewjs-repo",id:"quick-starts/get-liveviewjs-repo",title:"Let's Build a LiveView",description:"Building a LiveView is easy with LiveViewJS.  You can get started in just a few minutes.",source:"@site/docs/02-quick-starts/get-liveviewjs-repo.md",sourceDirName:"02-quick-starts",slug:"/quick-starts/get-liveviewjs-repo",permalink:"/docs/quick-starts/get-liveviewjs-repo",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quick Starts",permalink:"/docs/category/quick-starts"},next:{title:"NodeJS - Run the Examples",permalink:"/docs/quick-starts/nodejs-run-examples"}},s={},p=[{value:"Create a New Project",id:"create-a-new-project",level:2},{value:"Get the Code",id:"get-the-code",level:2},{value:"Clone the <strong>LiveViewJS</strong> GitHub repository:",id:"clone-the-liveviewjs-github-repository",level:3},{value:"OR fetch with <code>degit</code>:",id:"or-fetch-with-degit",level:3},{value:"Change to the LiveViewJS Directory",id:"change-to-the-liveviewjs-directory",level:2},{value:"Node or Deno?",id:"node-or-deno",level:2},{value:"Node",id:"node",level:3},{value:"Deno",id:"deno",level:3}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lets-build-a-liveview"},"Let's Build a LiveView"),(0,i.kt)("p",null,"Building a LiveView is easy with ",(0,i.kt)("strong",{parentName:"p"},"LiveViewJS"),".  You can get started in just a few minutes."),(0,i.kt)("h2",{id:"create-a-new-project"},"Create a New Project"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"LiveViewJS")," has a project generation tool that will setup the project structure and install the required dependencies for either NodeJS or Deno."),(0,i.kt)("p",null,"Run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx @liveviewjs/gen\n")),(0,i.kt)("p",null,"You will be prompted to select the type of project you want to create and a couple other questions.  Then, voil\xe0, you will have a new project that runs out of the box!"),(0,i.kt)("h1",{id:"download-the-repo"},"Download the Repo"),(0,i.kt)("p",null,"The fastest way to run the example or build your own LiveView is by downloading the ",(0,i.kt)("strong",{parentName:"p"},"LiveViewJS")," repo. This repo\ncontains all the examples and configured webserver code for Express (NodeJS) and Oak (Deno)."),(0,i.kt)("h2",{id:"get-the-code"},"Get the Code"),(0,i.kt)("p",null,"Either use ",(0,i.kt)("inlineCode",{parentName:"p"},"git clone")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"degit")," to get the ",(0,i.kt)("strong",{parentName:"p"},"LiveViewJS")," GitHub repository."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"degit")," is a lightweight way to clone a repo without the .git parts.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Rich-Harris/degit"},"More info"),".")),(0,i.kt)("h3",{id:"clone-the-liveviewjs-github-repository"},"Clone the ",(0,i.kt)("strong",{parentName:"h3"},"LiveViewJS")," GitHub repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# clone the LiveViewJS repo\ngit clone https://github.com/floodfx/liveviewjs.git\n")),(0,i.kt)("h3",{id:"or-fetch-with-degit"},"OR fetch with ",(0,i.kt)("inlineCode",{parentName:"h3"},"degit"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# copy the LiveViewJS repo\nnpx degit floodfx/liveviewjs liveviewjs\n")),(0,i.kt)("h2",{id:"change-to-the-liveviewjs-directory"},"Change to the LiveViewJS Directory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# cd to the LiveViewJS directory\ncd liveviewjs\n")),(0,i.kt)("h2",{id:"node-or-deno"},"Node or Deno?"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"LiveViewJS")," runs on both Node and Deno, but you'll probably want to start down one path or the other depending on what\nruntime you are more familiar with or are already using."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("strong",{parentName:"p"},"LiveViewJS")," library APIs are the same so you can build your LiveViews on one platform and run them on the\nother unless you are using Deno or Node-specific APIs in your LiveView implementation.")),(0,i.kt)("h3",{id:"node"},"Node"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"nodejs-run-examples"},"NodeJS - Run the Examples")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"nodejs-build-first-liveview"},"NodeJS - Build your First LiveView"))),(0,i.kt)("h3",{id:"deno"},"Deno"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"deno-run-examples"},"Deno - Run the Examples")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"deno-build-first-liveview"},"Deno - Build your First LiveView"))))}d.isMDXComponent=!0}}]);