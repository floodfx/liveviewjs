"use strict";(self.webpackChunkliveviewjs_com=self.webpackChunkliveviewjs_com||[]).push([[5071],{876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var i=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),m=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(n),u=r,v=d["".concat(s,".").concat(u)]||d[u]||p[u]||a;return n?i.createElement(v,o(o({ref:t},c),{},{components:n})):i.createElement(v,o({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var m=2;m<a;m++)o[m]=n[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},471:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var i=n(7896),r=(n(2784),n(876));const a={sidebar_position:1},o="Overview",l={unversionedId:"js-commands/overview",id:"js-commands/overview",title:"Overview",description:"LiveViewJS user events (clicks, etc) typically trigger a server-side event which updates the state of the LiveView and",source:"@site/docs/11-js-commands/overview.md",sourceDirName:"11-js-commands",slug:"/js-commands/overview",permalink:"/docs/js-commands/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"JS Commands",permalink:"/docs/category/js-commands"},next:{title:"Add/Remove Class Commands",permalink:"/docs/js-commands/add-remove-class"}},s={},m=[{value:"JS Command Syntax",id:"js-command-syntax",level:2},{value:"&quot;Chainable&quot; (i.e.,  fluent) Syntax",id:"chainable-ie--fluent-syntax",level:2},{value:"Example JS Commands LiveView",id:"example-js-commands-liveview",level:2}],c={toc:m};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"LiveViewJS user events (clicks, etc) typically trigger a server-side event which updates the state of the LiveView and\nre-renders the HTML. Sometimes you want to update the DOM without (or in addition to) initiating a server round trip.\nThis is where JS Commands come in."),(0,r.kt)("p",null,"JS Commands support a number of client-side DOM manipulation function that can be used to update the DOM without a\nserver round trip. These functions are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"add_class")," - Add css classes to an element including optional transition classes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"remove_class")," - Remove css classes from an element including optional transition classes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"set_attribute")," - Set an attribute on an element"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"remove_attribute")," - Remove an attribute from an element"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"show")," - Show an element including optional transition classes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hide")," - Hide an element including optional transition classes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toggle")," - Toggle the visibility of an element"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dispatch")," - Dispatch a DOM event from an element"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transition")," - Apply transition classes to an element (i.e.,  animate it)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"push")," - Push an event to the LiveView server (i.e.,  trigger a server round trip)")),(0,r.kt)("h2",{id:"js-command-syntax"},"JS Command Syntax"),(0,r.kt)("p",null,"JS Commands are used in the ",(0,r.kt)("inlineCode",{parentName:"p"},"render")," function of a LiveView or LiveComponent:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { JS } from \'lieviewjs\';\n\n//... render function of a LiveView\nrender() {\n  return html`\n    <div>\n      <button phx-click="${new JS().toggle({ to: "#toggle" })}">Toggle</button>\n      <div id="toggle">Toggle Me</div>\n    </div>\n  `;\n}\n')),(0,r.kt)("h2",{id:"chainable-ie--fluent-syntax"},'"Chainable" (i.e.,  fluent) Syntax'),(0,r.kt)("p",null,'JS Commands are "chainable" (i.e.,  fluent) so you can chain multiple commands together as needed and they will be\nexecuted in the order they are called:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { JS } from \'lieviewjs\';\n\n//... render function of a LiveView\nrender() {\n  // hide the button then push the "increment" event to the server\n  return html`\n    <div>\n      <button phx-click="${new JS().hide().push("increment")}">Increment</button>\n    </div>\n  `;\n}\n')),(0,r.kt)("h2",{id:"example-js-commands-liveview"},"Example JS Commands LiveView"),(0,r.kt)("p",null,"See ",(0,r.kt)("inlineCode",{parentName:"p"},"packages/examples/src/liveviews/jsCommands")," for a working, complete set of examples of using JS Commands."),(0,r.kt)("p",null,"More details on each JS Command can be found in the following sections."))}p.isMDXComponent=!0}}]);