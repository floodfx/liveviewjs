"use strict";(self.webpackChunkliveviewjs_com=self.webpackChunkliveviewjs_com||[]).push([[8685],{876:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),v=l(r),b=o,d=v["".concat(p,".").concat(b)]||v[b]||c[b]||i;return r?n.createElement(d,a(a({ref:t},u),{},{components:r})):n.createElement(d,a({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=v;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},14:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(7896),o=(r(2784),r(876));const i={sidebar_position:3},a='Support Webserver "X"',s={unversionedId:"webserver-integration/support-webserver-x",id:"webserver-integration/support-webserver-x",title:'Support Webserver "X"',description:"If you want to use LiveViewJS with a webserver that is not supported out of the box, you can implement the",source:"@site/docs/12-webserver-integration/support-webserver-x.md",sourceDirName:"12-webserver-integration",slug:"/webserver-integration/support-webserver-x",permalink:"/docs/webserver-integration/support-webserver-x",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"LiveViewServerAdaptor",permalink:"/docs/webserver-integration/liveview-server-adaptor"},next:{title:"Miscellaneous",permalink:"/docs/category/miscellaneous"}},p={},l=[{value:"Look at the existing integrations",id:"look-at-the-existing-integrations",level:2},{value:"Open an issue",id:"open-an-issue",level:2}],u={toc:l};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"support-webserver-x"},'Support Webserver "X"'),(0,o.kt)("p",null,"If you want to use LiveViewJS with a webserver that is not supported out of the box, you can implement the\n",(0,o.kt)("inlineCode",{parentName:"p"},"LiveViewServerAdaptor")," interface and plug it into your webserver."),(0,o.kt)("p",null,"Essentially, you'll need to be able to intercept HTTP and websocket requests and pass them to the LiveViewJS library.\nThe LiveViewJS library will then handle the requests and return the appropriate responses."),(0,o.kt)("h2",{id:"look-at-the-existing-integrations"},"Look at the existing integrations"),(0,o.kt)("p",null,"Checkout the LiveViewJS source code and look at the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/floodfx/liveviewjs/blob/main/packages/express/src/node/server.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"NodeExpressLiveViewServer"))," and\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/floodfx/liveviewjs/blob/main/packages/deno/src/deno/server.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"DenoOakLiveViewServer"))," classes.\nThese are the two webserver integrations that are supported out of the box."),(0,o.kt)("h2",{id:"open-an-issue"},"Open an issue"),(0,o.kt)("p",null,"We are happy to help you get LiveViewJS working with your webserver. If you\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/floodfx/liveviewjs/issues"},"open an issue")," on the LiveViewJS GitHub repo, we'll be happy to support\nyou."))}c.isMDXComponent=!0}}]);