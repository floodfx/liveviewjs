{
  "version": 3,
  "sources": ["../node_modules/nprogress/nprogress.js", "../src/browser/index.ts", "../node_modules/phoenix/assets/js/phoenix/utils.js", "../node_modules/phoenix/assets/js/phoenix/constants.js", "../node_modules/phoenix/assets/js/phoenix/push.js", "../node_modules/phoenix/assets/js/phoenix/timer.js", "../node_modules/phoenix/assets/js/phoenix/channel.js", "../node_modules/phoenix/assets/js/phoenix/ajax.js", "../node_modules/phoenix/assets/js/phoenix/longpoll.js", "../node_modules/phoenix/assets/js/phoenix/presence.js", "../node_modules/phoenix/assets/js/phoenix/serializer.js", "../node_modules/phoenix/assets/js/phoenix/socket.js", "../node_modules/phoenix_html/priv/static/phoenix_html.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/constants.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/entry_uploader.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/utils.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/browser.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/upload_entry.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_uploader.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/hooks.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../node_modules/phoenix_live_view/assets/node_modules/morphdom/dist/morphdom-esm.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_patch.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/rendered.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/view_hook.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/js.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/view.js", "../node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_socket.js"],
  "sourcesContent": ["/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\n;(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.NProgress = factory();\n  }\n\n})(this, function() {\n  var NProgress = {};\n\n  NProgress.version = '0.2.0';\n\n  var Settings = NProgress.settings = {\n    minimum: 0.08,\n    easing: 'ease',\n    positionUsing: '',\n    speed: 200,\n    trickle: true,\n    trickleRate: 0.02,\n    trickleSpeed: 800,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: 'body',\n    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n  };\n\n  /**\n   * Updates configuration.\n   *\n   *     NProgress.configure({\n   *       minimum: 0.1\n   *     });\n   */\n  NProgress.configure = function(options) {\n    var key, value;\n    for (key in options) {\n      value = options[key];\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n    }\n\n    return this;\n  };\n\n  /**\n   * Last number.\n   */\n\n  NProgress.status = null;\n\n  /**\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n   *\n   *     NProgress.set(0.4);\n   *     NProgress.set(1.0);\n   */\n\n  NProgress.set = function(n) {\n    var started = NProgress.isStarted();\n\n    n = clamp(n, Settings.minimum, 1);\n    NProgress.status = (n === 1 ? null : n);\n\n    var progress = NProgress.render(!started),\n        bar      = progress.querySelector(Settings.barSelector),\n        speed    = Settings.speed,\n        ease     = Settings.easing;\n\n    progress.offsetWidth; /* Repaint */\n\n    queue(function(next) {\n      // Set positionUsing if it hasn't already been set\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n      // Add transition\n      css(bar, barPositionCSS(n, speed, ease));\n\n      if (n === 1) {\n        // Fade out\n        css(progress, { \n          transition: 'none', \n          opacity: 1 \n        });\n        progress.offsetWidth; /* Repaint */\n\n        setTimeout(function() {\n          css(progress, { \n            transition: 'all ' + speed + 'ms linear', \n            opacity: 0 \n          });\n          setTimeout(function() {\n            NProgress.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n\n    return this;\n  };\n\n  NProgress.isStarted = function() {\n    return typeof NProgress.status === 'number';\n  };\n\n  /**\n   * Shows the progress bar.\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n   *\n   *     NProgress.start();\n   *\n   */\n  NProgress.start = function() {\n    if (!NProgress.status) NProgress.set(0);\n\n    var work = function() {\n      setTimeout(function() {\n        if (!NProgress.status) return;\n        NProgress.trickle();\n        work();\n      }, Settings.trickleSpeed);\n    };\n\n    if (Settings.trickle) work();\n\n    return this;\n  };\n\n  /**\n   * Hides the progress bar.\n   * This is the *sort of* the same as setting the status to 100%, with the\n   * difference being `done()` makes some placebo effect of some realistic motion.\n   *\n   *     NProgress.done();\n   *\n   * If `true` is passed, it will show the progress bar even if its hidden.\n   *\n   *     NProgress.done(true);\n   */\n\n  NProgress.done = function(force) {\n    if (!force && !NProgress.status) return this;\n\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n  };\n\n  /**\n   * Increments by a random amount.\n   */\n\n  NProgress.inc = function(amount) {\n    var n = NProgress.status;\n\n    if (!n) {\n      return NProgress.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n      }\n\n      n = clamp(n + amount, 0, 0.994);\n      return NProgress.set(n);\n    }\n  };\n\n  NProgress.trickle = function() {\n    return NProgress.inc(Math.random() * Settings.trickleRate);\n  };\n\n  /**\n   * Waits for all supplied jQuery promises and\n   * increases the progress as the promises resolve.\n   *\n   * @param $promise jQUery Promise\n   */\n  (function() {\n    var initial = 0, current = 0;\n\n    NProgress.promise = function($promise) {\n      if (!$promise || $promise.state() === \"resolved\") {\n        return this;\n      }\n\n      if (current === 0) {\n        NProgress.start();\n      }\n\n      initial++;\n      current++;\n\n      $promise.always(function() {\n        current--;\n        if (current === 0) {\n            initial = 0;\n            NProgress.done();\n        } else {\n            NProgress.set((initial - current) / initial);\n        }\n      });\n\n      return this;\n    };\n\n  })();\n\n  /**\n   * (Internal) renders the progress bar markup based on the `template`\n   * setting.\n   */\n\n  NProgress.render = function(fromStart) {\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n    addClass(document.documentElement, 'nprogress-busy');\n    \n    var progress = document.createElement('div');\n    progress.id = 'nprogress';\n    progress.innerHTML = Settings.template;\n\n    var bar      = progress.querySelector(Settings.barSelector),\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n        parent   = document.querySelector(Settings.parent),\n        spinner;\n    \n    css(bar, {\n      transition: 'all 0 linear',\n      transform: 'translate3d(' + perc + '%,0,0)'\n    });\n\n    if (!Settings.showSpinner) {\n      spinner = progress.querySelector(Settings.spinnerSelector);\n      spinner && removeElement(spinner);\n    }\n\n    if (parent != document.body) {\n      addClass(parent, 'nprogress-custom-parent');\n    }\n\n    parent.appendChild(progress);\n    return progress;\n  };\n\n  /**\n   * Removes the element. Opposite of render().\n   */\n\n  NProgress.remove = function() {\n    removeClass(document.documentElement, 'nprogress-busy');\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n    var progress = document.getElementById('nprogress');\n    progress && removeElement(progress);\n  };\n\n  /**\n   * Checks if the progress bar is rendered.\n   */\n\n  NProgress.isRendered = function() {\n    return !!document.getElementById('nprogress');\n  };\n\n  /**\n   * Determine which positioning CSS rule to use.\n   */\n\n  NProgress.getPositioningCSS = function() {\n    // Sniff on document.body.style\n    var bodyStyle = document.body.style;\n\n    // Sniff prefixes\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\n                       ('msTransform' in bodyStyle) ? 'ms' :\n                       ('OTransform' in bodyStyle) ? 'O' : '';\n\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\n      // Modern browsers with 3D support, e.g. Webkit, IE10\n      return 'translate3d';\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n      // Browsers without 3D support, e.g. IE9\n      return 'translate';\n    } else {\n      // Browsers without translate() support, e.g. IE7-8\n      return 'margin';\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function clamp(n, min, max) {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  }\n\n  /**\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\n   * percentage (`-100%..0%`).\n   */\n\n  function toBarPerc(n) {\n    return (-1 + n) * 100;\n  }\n\n\n  /**\n   * (Internal) returns the correct CSS for changing the bar's\n   * position given an n percentage, and speed and ease from Settings\n   */\n\n  function barPositionCSS(n, speed, ease) {\n    var barCSS;\n\n    if (Settings.positionUsing === 'translate3d') {\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n    } else if (Settings.positionUsing === 'translate') {\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n    } else {\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n    }\n\n    barCSS.transition = 'all '+speed+'ms '+ease;\n\n    return barCSS;\n  }\n\n  /**\n   * (Internal) Queues a function to be executed.\n   */\n\n  var queue = (function() {\n    var pending = [];\n    \n    function next() {\n      var fn = pending.shift();\n      if (fn) {\n        fn(next);\n      }\n    }\n\n    return function(fn) {\n      pending.push(fn);\n      if (pending.length == 1) next();\n    };\n  })();\n\n  /**\n   * (Internal) Applies css properties to an element, similar to the jQuery \n   * css method.\n   *\n   * While this helper does assist with vendor prefixed property names, it \n   * does not perform any manipulation of values prior to setting styles.\n   */\n\n  var css = (function() {\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n        cssProps    = {};\n\n    function camelCase(string) {\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n        return letter.toUpperCase();\n      });\n    }\n\n    function getVendorProp(name) {\n      var style = document.body.style;\n      if (name in style) return name;\n\n      var i = cssPrefixes.length,\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\n          vendorName;\n      while (i--) {\n        vendorName = cssPrefixes[i] + capName;\n        if (vendorName in style) return vendorName;\n      }\n\n      return name;\n    }\n\n    function getStyleProp(name) {\n      name = camelCase(name);\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n    }\n\n    function applyCss(element, prop, value) {\n      prop = getStyleProp(prop);\n      element.style[prop] = value;\n    }\n\n    return function(element, properties) {\n      var args = arguments,\n          prop, \n          value;\n\n      if (args.length == 2) {\n        for (prop in properties) {\n          value = properties[prop];\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n        }\n      } else {\n        applyCss(element, args[1], args[2]);\n      }\n    }\n  })();\n\n  /**\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\n   */\n\n  function hasClass(element, name) {\n    var list = typeof element == 'string' ? element : classList(element);\n    return list.indexOf(' ' + name + ' ') >= 0;\n  }\n\n  /**\n   * (Internal) Adds a class to an element.\n   */\n\n  function addClass(element, name) {\n    var oldList = classList(element),\n        newList = oldList + name;\n\n    if (hasClass(oldList, name)) return; \n\n    // Trim the opening space.\n    element.className = newList.substring(1);\n  }\n\n  /**\n   * (Internal) Removes a class from an element.\n   */\n\n  function removeClass(element, name) {\n    var oldList = classList(element),\n        newList;\n\n    if (!hasClass(element, name)) return;\n\n    // Replace the class name.\n    newList = oldList.replace(' ' + name + ' ', ' ');\n\n    // Trim the opening and closing spaces.\n    element.className = newList.substring(1, newList.length - 1);\n  }\n\n  /**\n   * (Internal) Gets a space separated list of the class names on the element. \n   * The list is wrapped with a single space on each end to facilitate finding \n   * matches within the list.\n   */\n\n  function classList(element) {\n    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n  }\n\n  /**\n   * (Internal) Removes an element from the DOM.\n   */\n\n  function removeElement(element) {\n    element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  return NProgress;\n});\n\n", "import NProgress from \"nprogress\";\nimport { Socket } from \"phoenix\";\nimport \"phoenix_html\";\nimport { LiveSocket } from \"phoenix_live_view\";\n/**\n * Example of a customized LiveView client javascript which is loaded into the browser.\n * See: @liveviewjs/browser pacage (packages/browser)\n */\n\n/**\n * Define custom LiveView Hooks that can tap into browser events.\n * See: https://hexdocs.pm/phoenix_live_view/js-interop.html#client-hooks-via-phx-hook\n */\nlet Hooks = {\n  /**\n   * This hook can be used by an input element to prevent input other than numbers.\n   * e.g. <input type=\"text\" phx-hook=\"NumberInput\" />\n   */\n  NumberInput: {\n    mounted() {\n      this.el.addEventListener(\"input\", () => {\n        // replace all non-numeric characters with empty string\n        this.el.value = this.el.value.replace(/\\D/g, \"\");\n      });\n    },\n  },\n};\n\nconst url = \"/live\";\nlet csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\nlet liveSocket = new LiveSocket(url, Socket, { params: { _csrf_token: csrfToken }, hooks: Hooks });\n\n// Show progress bar on live navigation and form submits\nwindow.addEventListener(\"phx:page-loading-start\", (info) => NProgress.start());\nwindow.addEventListener(\"phx:page-loading-stop\", (info) => NProgress.done());\n\n// connect if there are any LiveViews on the page\nliveSocket.connect();\n\n// expose liveSocket on window for web console debug logs and latency simulation:\nliveSocket.enableDebug();\n// >> liveSocket.enableLatencySim(1000)\n(window as any).liveSocket = liveSocket;\n", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || this\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => { callback && callback(null) }\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(){\n    this.close()\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry()\n  }\n\n  poll(){\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\n\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within it's own macrotask.\n            setTimeout(() => {\n              this.onmessage({data: msg})\n            }, 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen()\n          this.poll()\n          break\n        case 403:\n          this.onerror()\n          this.close()\n          break\n        case 0:\n        case 500:\n          this.onerror()\n          this.closeAndRetry()\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry()\n      }\n    })\n  }\n\n  close(_code, _reason){\n    this.readyState = SOCKET_STATES.closed\n    this.onclose()\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback.\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millsec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millsec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.disconnect()\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualifed socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.closeWasClean = true\n    this.reconnectTimer.reset()\n    this.teardown(callback, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    this.connectClock++\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn){ return }\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * @private\n   */\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.abnormalClose(\"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    clearTimeout(this.heartbeatTimer)\n    setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n\n    this.waitForBufferDone(() => {\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(this.conn){\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearTimeout(this.heartbeatTimer)\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c.joinRef() !== channel.joinRef())\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  abnormalClose(reason){\n    this.closeWasClean = false\n    if(this.isConnected()){ this.conn.close(WS_CLOSE_NORMAL, reason) }\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        clearTimeout(this.heartbeatTimer)\n        this.pendingHeartbeatRef = null\n        setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "\"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"hidden\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n", "\nexport const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER_MIN = 1000\nexport const RELOAD_JITTER_MAX = 3000\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF = \"data-phx-ref\"\nexport const PHX_REF_SRC = \"data-phx-ref-src\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_PRUNE = \"data-phx-prune\"\nexport const PHX_PAGE_LOADING = \"page-loading\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_DISCONNECTED_CLASS = \"phx-loading\"\nexport const PHX_NO_FEEDBACK_CLASS = \"phx-no-feedback\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_FEEDBACK_FOR = \"feedback-for\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\", \"datetime-local\", \"color\", \"range\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STICKY = \"data-phx-sticky\"\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const LOADER_TIMEOUT = 1\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\n\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\nexport const TEMPLATES = \"p\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    clearTimeout(this.chunkTimer)\n    this.uploadChannel.leave()\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => {\n  let type = typeof(cid)\n  return type === \"number\" || (type === \"string\" && /^(0|[1-9]\\d*)$/.test(cid))\n}\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`)){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n        let hashEl = this.getHashTargetEl(window.location.hash)\n\n        if(hashEl){\n          hashEl.scrollIntoView()\n        } else if(meta.type === \"redirect\"){\n          window.scroll(0, 0)\n        }\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value){\n    document.cookie = `${name}=${value}`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  redirect(toURL, flash){\n    if(flash){ Browser.setCookie(\"__phoenix_flash__\", flash + \"; max-age=60000; path=/\") }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_EVENT_CLASSES,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_NO_FEEDBACK_CLASS,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF,\n  PHX_REF_SRC,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_STICKY,\n  THROTTLED\n} from \"./constants\"\n\nimport {\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  findUploadInputs(node){ return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`) },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  markPhxChildDestroyed(el){\n    if(this.isPhxChild(el)){ el.setAttribute(PHX_SESSION, \"\") }\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxSticky(el){ return this.all(el, `[${PHX_STICKY}]`) },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findParentCIDs(node, cids){\n    let initial = new Set(cids)\n    return cids.reduce((acc, cid) => {\n      let selector = `[${PHX_COMPONENT}=\"${cid}\"] [${PHX_COMPONENT}]`\n\n      this.filterWithinSameLiveView(this.all(node, selector), node)\n        .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n        .forEach(childCID => acc.delete(childCID))\n\n      return acc\n    }, initial)\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  updatePrivate(el, key, defaultVal, updateFunc){\n    let existing = this.private(el, key)\n    if(existing === undefined){\n      this.putPrivate(el, key, updateFunc(defaultVal))\n    } else {\n      this.putPrivate(el, key, updateFunc(existing))\n    }\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = source[PHX_PRIVATE]\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    let {prefix, suffix} = titleEl.dataset\n    document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => callback())\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            this.putPrivate(el, THROTTLED, true)\n            setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER), timeout)\n          }\n        } else {\n          setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle), timeout)\n        }\n\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => this.triggerCycle(el, DEBOUNCE_TRIGGER))\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  discardError(container, el, phxFeedbackFor){\n    let field = el.getAttribute && el.getAttribute(phxFeedbackFor)\n    // TODO: Remove id lookup after we update Phoenix to use input_name instead of input_id\n    let input = field && container.querySelector(`[id=\"${field}\"], [name=\"${field}\"]`)\n    if(!input){ return }\n\n    if(!(this.private(input, PHX_HAS_FOCUSED) || this.private(input.form, PHX_HAS_SUBMITTED))){\n      el.classList.add(PHX_NO_FEEDBACK_CLASS)\n    }\n  },\n\n  showError(inputEl, phxFeedbackFor){\n    if(inputEl.id || inputEl.name){\n      this.all(inputEl.form, `[${phxFeedbackFor}=\"${inputEl.id}\"], [${phxFeedbackFor}=\"${inputEl.name}\"]`, (el) => {\n        this.removeClass(el, PHX_NO_FEEDBACK_CLASS)\n      })\n    }\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  isPhxSticky(node){\n    return node.getAttribute && node.getAttribute(PHX_STICKY) !== null\n  },\n\n  firstPhxChild(el){\n    return this.isPhxChild(el) ? el : this.all(el, `[${PHX_PARENT_ID}]`)[0]\n  },\n\n  dispatchEvent(target, eventString, detail = {}){\n    let event = new CustomEvent(eventString, {bubbles: true, cancelable: true, detail: detail})\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  mergeAttrs(target, source, opts = {}){\n    let exclude = opts.exclude || []\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(exclude.indexOf(name) < 0){ target.setAttribute(name, source.getAttribute(name)) }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {except: [\"value\"]}) }\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(!DOM.isTextualInput(focused)){ return }\n    let wasFocused = focused.matches(\":focus\")\n    if(focused.readOnly){ focused.blur() }\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  syncPendingRef(fromEl, toEl, disableWith){\n    let ref = fromEl.getAttribute(PHX_REF)\n    if(ref === null){ return true }\n    let refSrc = fromEl.getAttribute(PHX_REF_SRC)\n\n    if(DOM.isFormInput(fromEl) || fromEl.getAttribute(disableWith) !== null){\n      if(DOM.isUploadInput(fromEl)){ DOM.mergeAttrs(fromEl, toEl, {isIgnored: true}) }\n      DOM.putPrivate(fromEl, PHX_REF, toEl)\n      return false\n    } else {\n      PHX_EVENT_CLASSES.forEach(className => {\n        fromEl.classList.contains(className) && toEl.classList.add(className)\n      })\n      toEl.setAttribute(PHX_REF, ref)\n      toEl.setAttribute(PHX_REF_SRC, refSrc)\n      return true\n    }\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN, PHX_ROOT_ID])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  },\n\n  getSticky(el, name, defaultVal){\n    let op = (DOM.private(el, \"sticky\") || []).find(([existingName, ]) => name === existingName)\n    if(op){\n      let [_name, _op, stashedResult] = op\n      return stashedResult\n    } else {\n      return typeof(defaultVal) === \"function\" ? defaultVal() : defaultVal\n    }\n  },\n\n  deleteSticky(el, name){\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      return ops.filter(([existingName, _]) => existingName !== name)\n    })\n  },\n\n  putSticky(el, name, op){\n    let stashedResult = op(el)\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      let existingIndex = ops.findIndex(([existingName, ]) => name === existingName)\n      if(existingIndex >= 0){\n        ops[existingIndex] = [name, op, stashedResult]\n      } else {\n        ops.push([name, op, stashedResult])\n      }\n      return ops\n    })\n  },\n\n  applyStickyOperations(el){\n    let ops = DOM.private(el, \"sticky\")\n    if(!ops){ return }\n\n    ops.forEach(([name, op, _stashed]) => this.putSticky(el, name, op))\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  constructor(fileEl, file, view){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function (){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  cancel(){\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    LiveUploader.clearFiles(this.fileEl)\n  }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){ this.cancel() }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.name = file.name || entry.ref\n      entry.type = file.type\n      entry.size = file.size\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.putPrivate(inputEl, \"files\", this.activeFiles(inputEl).concat(newFiles))\n      inputEl.value = null\n    } else {\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view))\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        entry.zipPostFlight(resp)\n        entry.onDone(() => {\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        })\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view.cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  }\n}\n\nexport default Hooks\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_FEEDBACK_FOR,\n  PHX_PRUNE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  isCid\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchEl(fromEl, toEl, activeElement){\n    morphdom(fromEl, toEl, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: [],\n      aftertransitionsDiscarded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    DOM.all(this.container, \"[phx-update=append] > *, [phx-update=prepend] > *\", el => {\n      el.setAttribute(PHX_PRUNE, \"\")\n    })\n  }\n\n  perform(){\n    let {view, liveSocket, container, html} = this\n    let targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxFeedbackFor = liveSocket.binding(PHX_FEEDBACK_FOR)\n    let disableWith = liveSocket.binding(PHX_DISABLE_WITH)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let phxRemove = liveSocket.binding(\"remove\")\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n    let pendingRemoves = []\n    let externalFormTriggered = null\n\n    let diffHTML = liveSocket.time(\"premorph container prep\", () => {\n      return this.buildDiffHTML(container, html, phxUpdate, targetContainer)\n    })\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      morphdom(targetContainer, diffHTML, {\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null,\n        getNodeKey: (node) => {\n          return DOM.isPhxDestroyed(node) ? null : node.id\n        },\n        onBeforeNodeAdded: (el) => {\n          this.trackBefore(\"added\", el)\n          return el\n        },\n        onNodeAdded: (el) => {\n          // hack to fix Safari handling of img srcset and video tags\n          if(el instanceof HTMLImageElement && el.srcset){\n            el.srcset = el.srcset\n          } else if(el instanceof HTMLVideoElement && el.autoplay){\n            el.play()\n          }\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          //input handling\n          DOM.discardError(targetContainer, el, phxFeedbackFor)\n          // nested view handling\n          if((DOM.isPhxChild(el) && view.ownsElement(el)) || DOM.isPhxSticky(el) && view.ownsElement(el.parentNode)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => {\n          // nested view handling\n          if(DOM.isPhxChild(el) || DOM.isPhxSticky(el)){ liveSocket.destroyViewByEl(el) }\n          this.trackAfter(\"discarded\", el)\n        },\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_PRUNE) !== null){ return true }\n          if(el.parentNode !== null && DOM.isPhxUpdate(el.parentNode, phxUpdate, [\"append\", \"prepend\"]) && el.id){ return false }\n          if(el.getAttribute && el.getAttribute(phxRemove)){\n            pendingRemoves.push(el)\n            return false\n          }\n          if(this.skipCIDSibling(el)){ return false }\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){ return false }\n          if(DOM.isPhxSticky(fromEl)){ return false }\n          if(DOM.isIgnored(fromEl, phxUpdate)){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          if(!DOM.syncPendingRef(fromEl, toEl, disableWith)){\n            if(DOM.isUploadInput(fromEl)){\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n          DOM.discardError(targetContainer, toEl, phxFeedbackFor)\n\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          if(isFocusedFormEl){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          } else {\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n            DOM.syncAttrsToProps(toEl)\n            DOM.applyStickyOperations(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return true\n          }\n        }\n      })\n    })\n\n    if(liveSocket.isDebugEnabled()){ detectDuplicateIds() }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    if(pendingRemoves.length > 0){\n      liveSocket.transitionRemoves(pendingRemoves)\n      liveSocket.requestDOMUpdate(() => {\n        pendingRemoves.forEach(el => {\n          let child = DOM.firstPhxChild(el)\n          if(child){ liveSocket.destroyViewByEl(child) }\n          el.remove()\n        })\n        this.trackAfter(\"transitionsDiscarded\", pendingRemoves)\n      })\n    }\n\n    if(externalFormTriggered){\n      liveSocket.disconnect()\n      externalFormTriggered.submit()\n    }\n    return true\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.getAttribute(PHX_SKIP) !== null\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  // builds HTML for morphdom patch\n  // - for full patches of LiveView or a component with a single\n  //   root node, simply returns the HTML\n  // - for patches of a component with multiple root nodes, the\n  //   parent node becomes the target container and non-component\n  //   siblings are marked as skip.\n  buildDiffHTML(container, html, phxUpdate, targetContainer){\n    let isCIDPatch = this.isCIDPatch()\n    let isCIDWithSingleRoot = isCIDPatch && targetContainer.getAttribute(PHX_COMPONENT) === this.targetCID.toString()\n    if(!isCIDPatch || isCIDWithSingleRoot){\n      return html\n    } else {\n      // component patch with multiple CID roots\n      let diffContainer = null\n      let template = document.createElement(\"template\")\n      diffContainer = DOM.cloneNode(targetContainer)\n      let [firstComponent, ...rest] = DOM.findComponentNodeList(diffContainer, this.targetCID)\n      template.innerHTML = html\n      rest.forEach(el => el.remove())\n      Array.from(diffContainer.childNodes).forEach(child => {\n        // we can only skip trackable nodes with an ID\n        if(child.id && child.nodeType === Node.ELEMENT_NODE && child.getAttribute(PHX_COMPONENT) !== this.targetCID.toString()){\n          child.setAttribute(PHX_SKIP, \"\")\n          child.innerHTML = \"\"\n        }\n      })\n      Array.from(template.content.childNodes).forEach(el => diffContainer.insertBefore(el, firstComponent))\n      firstComponent.remove()\n      return diffContainer.outerHTML\n    }\n  }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  TEMPLATES,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  REPLY,\n  STATIC,\n  TITLE\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    return this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids)\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids}\n    this.toOutputBuffer(rendered, null, output)\n    return output.buffer\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(let cid in newc){ oldc[cid] = newc[cid] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined ? cdiff : this.cloneMerge(oldc[cid] || {}, cdiff)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n  }\n\n  cloneMerge(target, source){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val)\n      }\n    }\n    return merged\n  }\n\n  componentToString(cid){ return this.recursiveCIDToString(this.rendered[COMPONENTS], cid) }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  templateStatic(part, templates){\n    if(typeof (part) === \"number\") {\n      return templates[part]\n    } else {\n      return part\n    }\n  }\n\n  toOutputBuffer(rendered, templates, output){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, templates, output) }\n    let {[STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], templates, output)\n      output.buffer += statics[i]\n    }\n  }\n\n  comprehensionToBuffer(rendered, templates, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n    let compTemplates = templates || rendered[TEMPLATES]\n\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        this.dynamicToBuffer(dynamic[i - 1], compTemplates, output)\n        output.buffer += statics[i]\n      }\n    }\n  }\n\n  dynamicToBuffer(rendered, templates, output){\n    if(typeof (rendered) === \"number\"){\n      output.buffer += this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, templates, output)\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let template = document.createElement(\"template\")\n    template.innerHTML = this.recursiveToString(component, components, onlyCids)\n    let container = template.content\n    let skip = onlyCids && !onlyCids.has(cid)\n\n    let [hasChildNodes, hasChildComponents] =\n      Array.from(container.childNodes).reduce(([hasNodes, hasComponents], child, i) => {\n        if(child.nodeType === Node.ELEMENT_NODE){\n          if(child.getAttribute(PHX_COMPONENT)){\n            return [hasNodes, true]\n          }\n          child.setAttribute(PHX_COMPONENT, cid)\n          if(!child.id){ child.id = `${this.parentViewId()}-${cid}-${i}` }\n          if(skip){\n            child.setAttribute(PHX_SKIP, \"\")\n            child.innerHTML = \"\"\n          }\n          return [true, hasComponents]\n        } else {\n          if(child.nodeValue.trim() !== \"\"){\n            logError(\"only HTML element tags are allowed at the root of components.\\n\\n\" +\n              `got: \"${child.nodeValue.trim()}\"\\n\\n` +\n              \"within:\\n\", template.innerHTML.trim())\n            child.replaceWith(this.createSpan(child.nodeValue, cid))\n            return [true, hasComponents]\n          } else {\n            child.remove()\n            return [hasNodes, hasComponents]\n          }\n        }\n      }, [false, false])\n\n    if(!hasChildNodes && !hasChildComponents){\n      logError(\"expected at least one HTML element tag inside a component, but the component is empty:\\n\",\n        template.innerHTML.trim())\n      return this.createSpan(\"\", cid).outerHTML\n    } else if(!hasChildNodes && hasChildComponents){\n      logError(\"expected at least one HTML element tag directly inside a component, but only subcomponents were found. A component must render at least one HTML tag directly inside itself.\",\n        template.innerHTML.trim())\n      return template.innerHTML\n    } else {\n      return template.innerHTML\n    }\n  }\n\n  createSpan(text, cid){\n    let span = document.createElement(\"span\")\n    span.innerText = text\n    span.setAttribute(PHX_COMPONENT, cid)\n    return span\n  }\n}\n", "let viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return el.phxHookId }\n\n  constructor(view, el, callbacks){\n    this.__view = view\n    this.__liveSocket = view.liveSocket\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    this.el = el\n    this.el.phxHookId = this.constructor.makeID()\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view.pushHookEvent(null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view.dispatchUploads(name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view.withinTargets(phxTarget, view => view.dispatchUploads(name, files))\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import DOM from \"./dom\"\n\nlet JS = {\n  exec(eventType, phxEvent, view, sourceEl, defaults){\n    let [defaultKind, defaultArgs] = defaults || [null, {}]\n    let commands = phxEvent.charAt(0) === \"[\" ?\n      JSON.parse(phxEvent) : [[defaultKind, defaultArgs]]\n\n    commands.forEach(([kind, args]) => {\n      if(kind === defaultKind && defaultArgs.data){\n        args.data = Object.assign(args.data || {}, defaultArgs.data)\n      }\n      this.filterToEls(sourceEl, args).forEach(el => {\n        this[`exec_${kind}`](eventType, phxEvent, view, sourceEl, el, args)\n      })\n    })\n  },\n\n  isVisible(el){\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length > 0)\n  },\n\n  // private\n\n  // commands\n\n  exec_dispatch(eventType, phxEvent, view, sourceEl, el, {to, event, detail}){\n    DOM.dispatchEvent(el, event, detail)\n  },\n\n  exec_push(eventType, phxEvent, view, sourceEl, el, args){\n    let {event, data, target, page_loading, loading, value} = args\n    let pushOpts = {loading, value, target, page_loading: !!page_loading}\n    let targetSrc = eventType === \"change\" ? sourceEl.form : sourceEl\n    let phxTarget = target || targetSrc.getAttribute(view.binding(\"target\")) || targetSrc\n    view.withinTargets(phxTarget, (targetView, targetCtx) => {\n      if(eventType === \"change\"){\n        let {newCid, _target, callback} = args\n        if(_target){ pushOpts._target = _target }\n        targetView.pushInput(sourceEl, targetCtx, newCid, event || phxEvent, pushOpts, callback)\n      } else if(eventType === \"submit\"){\n        targetView.submitForm(sourceEl, targetCtx, event || phxEvent, pushOpts)\n      } else {\n        targetView.pushEvent(eventType, sourceEl, targetCtx, event || phxEvent, data, pushOpts)\n      }\n    })\n  },\n\n  exec_add_class(eventType, phxEvent, view, sourceEl, el, {names, transition, time}){\n    this.addOrRemoveClasses(el, names, [], transition, time, view)\n  },\n\n  exec_remove_class(eventType, phxEvent, view, sourceEl, el, {names, transition, time}){\n    this.addOrRemoveClasses(el, [], names, transition, time, view)\n  },\n\n  exec_transition(eventType, phxEvent, view, sourceEl, el, {time, transition}){\n    let [transition_start, running, transition_end] = transition\n    let onStart = () => this.addOrRemoveClasses(el, transition_start.concat(running), [])\n    let onDone = () => this.addOrRemoveClasses(el, transition_end, transition_start.concat(running))\n    view.transition(time, onStart, onDone)\n  },\n\n  exec_toggle(eventType, phxEvent, view, sourceEl, el, {display, ins, outs, time}){\n    this.toggle(eventType, view, el, display, ins, outs, time)\n  },\n\n  exec_show(eventType, phxEvent, view, sourceEl, el, {display, transition, time}){\n    this.show(eventType, view, el, display, transition, time)\n  },\n\n  exec_hide(eventType, phxEvent, view, sourceEl, el, {display, transition, time}){\n    this.hide(eventType, view, el, display, transition, time)\n  },\n\n  exec_set_attr(eventType, phxEvent, view, sourceEl, el, {attr: [attr, val]}){\n    this.setOrRemoveAttrs(el, [[attr, val]], [])\n  },\n\n  exec_remove_attr(eventType, phxEvent, view, sourceEl, el, {attr}){\n    this.setOrRemoveAttrs(el, [], [attr])\n  },\n\n  // utils for commands\n\n  show(eventType, view, el, display, transition, time){\n    if(!this.isVisible(el)){\n      this.toggle(eventType, view, el, display, transition, null, time)\n    }\n  },\n\n  hide(eventType, view, el, display, transition, time){\n    if(this.isVisible(el)){\n      this.toggle(eventType, view, el, display, null, transition, time)\n    }\n  },\n\n  toggle(eventType, view, el, display, ins, outs, time){\n    let [inClasses, inStartClasses, inEndClasses] = ins || [[], [], []]\n    let [outClasses, outStartClasses, outEndClasses] = outs || [[], [], []]\n    if(inClasses.length > 0 || outClasses.length > 0){\n      if(this.isVisible(el)){\n        let onStart = () => {\n          this.addOrRemoveClasses(el, outStartClasses, inClasses.concat(inStartClasses).concat(inEndClasses))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, outClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, outEndClasses, outStartClasses))\n          })\n        }\n        el.dispatchEvent(new Event(\"phx:hide-start\"))\n        view.transition(time, onStart, () => {\n          this.addOrRemoveClasses(el, [], outClasses.concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        if(eventType === \"remove\"){ return }\n        let onStart = () => {\n          this.addOrRemoveClasses(el, inStartClasses, outClasses.concat(outStartClasses).concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = (display || \"block\"))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, inClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, inEndClasses, inStartClasses))\n          })\n        }\n        el.dispatchEvent(new Event(\"phx:show-start\"))\n        view.transition(time, onStart, () => {\n          this.addOrRemoveClasses(el, [], inClasses.concat(inEndClasses))\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    } else {\n      if(this.isVisible(el)){\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:hide-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:show-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = display || \"block\")\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    }\n  },\n\n  addOrRemoveClasses(el, adds, removes, transition, time, view){\n    let [transition_run, transition_start, transition_end] = transition || [[], [], []]\n    if(transition_run.length > 0){\n      let onStart = () => this.addOrRemoveClasses(el, transition_start.concat(transition_run), [])\n      let onDone = () => this.addOrRemoveClasses(el, adds.concat(transition_end), removes.concat(transition_run).concat(transition_start))\n      return view.transition(time, onStart, onDone)\n    }\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let keepAdds = adds.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let keepRemoves = removes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      let newAdds = prevAdds.filter(name => removes.indexOf(name) < 0).concat(keepAdds)\n      let newRemoves = prevRemoves.filter(name => adds.indexOf(name) < 0).concat(keepRemoves)\n\n      DOM.putSticky(el, \"classes\", currentEl => {\n        currentEl.classList.remove(...newRemoves)\n        currentEl.classList.add(...newAdds)\n        return [newAdds, newRemoves]\n      })\n    })\n  },\n\n  setOrRemoveAttrs(el, sets, removes){\n    let [prevSets, prevRemoves] = DOM.getSticky(el, \"attrs\", [[], []])\n    let keepSets = sets.filter(([attr, _val]) => !this.hasSet(prevSets, attr) && !el.attributes.getNamedItem(attr))\n    let keepRemoves = removes.filter(attr => prevRemoves.indexOf(attr) < 0 && el.attributes.getNamedItem(attr))\n    let newSets = prevSets.filter(([attr, _val]) => removes.indexOf(attr) < 0).concat(keepSets)\n    let newRemoves = prevRemoves.filter(attr => !this.hasSet(sets, attr)).concat(keepRemoves)\n\n    DOM.putSticky(el, \"attrs\", currentEl => {\n      newRemoves.forEach(attr => currentEl.removeAttribute(attr))\n      newSets.forEach(([attr, val]) => currentEl.setAttribute(attr, val))\n      return [newSets, newRemoves]\n    })\n  },\n\n  hasSet(sets, nameSearch){ return sets.find(([name, val]) => name === nameSearch) },\n\n  hasAllClasses(el, classes){ return classes.every(name => el.classList.contains(name)) },\n\n  isToggledOut(el, outClasses){\n    return !this.isVisible(el) || this.hasAllClasses(el, outClasses)\n  },\n\n  filterToEls(sourceEl, {to}){\n    return to ? DOM.all(document, to) : [sourceEl]\n  }\n}\n\nexport default JS\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_DISCONNECTED_CLASS,\n  PHX_EVENT_CLASSES,\n  PHX_ERROR_CLASS,\n  PHX_FEEDBACK_FOR,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PAGE_LOADING,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF,\n  PHX_REF_SRC,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PUSH_TIMEOUT,\n  PHX_MAIN,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\nimport JS from \"./js\"\n\nlet serializeForm = (form, meta = {}) => {\n  let formData = new FormData(form)\n  let toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  let params = new URLSearchParams()\n  for(let [key, val] of formData.entries()){ params.append(key, val) }\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  constructor(el, liveSocket, parentView, flash){\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    this.id = this.el.id\n    this.ref = 0\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pruningCIDs = []\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function(onDone){ onDone && onDone() }\n    this.stopCallback = function(){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.uploaders = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      return {\n        redirect: this.redirect ? this.href : undefined,\n        url: this.redirect ? undefined : this.href || undefined,\n        params: this.connectParams(),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash\n      }\n    })\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.el.getAttribute(PHX_MAIN) !== null }\n\n  connectParams(){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_DISCONNECTED_CLASS,\n      PHX_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_DISCONNECTED_CLASS)\n    }\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.liveSocket.transition(time, onStart, onDone)\n  }\n\n  withinTargets(phxTarget, callback){\n    if(phxTarget instanceof HTMLElement || phxTarget instanceof SVGElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(isCid(phxTarget)){\n      let targets = DOM.findComponentNodeList(this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, parseInt(phxTarget))\n      }\n    } else {\n      let targets = Array.from(document.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    if(title){ DOM.putTitle(title) }\n\n    callback({diff, reply, events})\n    return reply\n  }\n\n  onJoin(resp){\n    let {rendered, container} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let html = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      let forms = this.formsForRecovery(html)\n      this.joinCount++\n\n      if(forms.length > 0){\n        forms.forEach(([form, newForm, newCid], i) => {\n          this.pushFormRecovery(form, newCid, resp => {\n            if(i === forms.length - 1){\n              this.onJoinComplete(resp, html, events)\n            }\n          })\n        })\n      } else {\n        this.onJoinComplete(resp, html, events)\n      }\n    })\n  }\n\n  dropPendingRefs(){\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.id}\"][${PHX_REF}]`, el => {\n      el.removeAttribute(PHX_REF)\n      el.removeAttribute(PHX_REF_SRC)\n    })\n  }\n\n  onJoinComplete({live_patch}, html, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  applyJoinPatch(live_patch, html, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false)\n    this.joinNewChildren()\n    DOM.all(this.el, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      let hook = this.addHook(hookEl)\n      if(hook){ hook.__mounted() }\n    })\n\n    this.joinPending = false\n    this.liveSocket.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  performPatch(patch, pruneCids){\n    let removedEls = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n\n      let newHook = this.addHook(el)\n      if(newHook){ newHook.__mounted() }\n    })\n\n    patch.after(\"phxChildAdded\", el => {\n      if(DOM.isPhxSticky(el)){\n        this.liveSocket.joinRootViews()\n      } else {\n        phxChildrenAdded = true\n      }\n    })\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      if(el.nodeType === Node.ELEMENT_NODE){ removedEls.push(el) }\n    })\n\n    patch.after(\"transitionsDiscarded\", els => this.afterElementsRemoved(els, pruneCids))\n    patch.perform()\n    this.afterElementsRemoved(removedEls, pruneCids)\n\n    return phxChildrenAdded\n  }\n\n  afterElementsRemoved(elements, pruneCids){\n    let destroyedCIDs = []\n    elements.forEach(parent => {\n      let components = DOM.all(parent, `[${PHX_COMPONENT}]`)\n        components.concat(parent).forEach(el => {\n        let cid = this.componentID(el)\n        if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n        let hook = this.getHook(el)\n        hook && this.destroyHook(hook)\n      })\n    })\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)][el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    this.joinCallback(() => {\n      this.pendingJoinOps.forEach(([view, op]) => {\n        if(!view.isDestroyed()){ op() }\n      })\n      this.pendingJoinOps = []\n    })\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || this.liveSocket.hasPendingLink()){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let html = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.liveSocket.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff).concat(this.pruningCIDs) : null\n      let html = this.rendered.toString(cids)\n      return `<${tag}>${html}</${tag}>`\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let html = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    if(ViewHook.elementID(el) || !el.getAttribute){ return }\n    let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n    if(hookName && !this.ownsElement(el)){ return }\n    let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n    if(callbacks){\n      if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n      let hook = new ViewHook(this, el, callbacks)\n      this.viewHooks[ViewHook.elementID(hook.el)] = hook\n      return hook\n    } else if(hookName !== null){\n      logError(`unknown hook found for \"${hookName}\"`, el)\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        this.liveSocket.requestDOMUpdate(() => cb(resp))\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.liveSocket.requestDOMUpdate(() => {\n        this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n      })\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){\n    for(let id in this.root.children[this.id]){\n      this.getChildById(id).destroy()\n    }\n  }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    this.liveSocket.historyRedirect(url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash}){ this.liveSocket.redirect(to, flash) }\n\n  isDestroyed(){ return this.destroyed }\n\n  join(callback){\n    if(this.isMain()){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = (onDone) => {\n      onDone = onDone || function(){}\n      callback ? callback(this.joinCount, onDone) : onDone()\n    }\n    this.liveSocket.wrapPush(this, {timeout: false}, () => {\n      return this.channel.join()\n        .receive(\"ok\", data => {\n          if(!this.isDestroyed()){\n            this.liveSocket.requestDOMUpdate(() => this.onJoin(data))\n          }\n        })\n        .receive(\"error\", resp => !this.isDestroyed() && this.onJoinError(resp))\n        .receive(\"timeout\", () => !this.isDestroyed() && this.onJoinError({reason: \"timeout\"}))\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      return this.onRedirect({to: this.href})\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    return this.liveSocket.reloadWithJitter(this)\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if((this.isJoinPending() && document.visibilityState !== \"hidden\") ||\n      (this.liveSocket.hasPendingLink() && reason !== \"leave\")){\n\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    this.log(\"error\", () => [\"view crashed\", reason])\n    if(!this.liveSocket.isUnloaded()){ this.displayError() }\n  }\n\n  displayError(){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {to: this.href, kind: \"error\"}) }\n    this.showLoader()\n    this.setContainerClasses(PHX_DISCONNECTED_CLASS, PHX_ERROR_CLASS)\n  }\n\n  pushWithReply(refGenerator, event, payload, onReply = function (){ }){\n    if(!this.isConnected()){ return }\n\n    let [ref, [el], opts] = refGenerator ? refGenerator() : [null, [], {}]\n    let onLoadingDone = function(){ }\n    if(opts.page_loading || (el && (el.getAttribute(this.binding(PHX_PAGE_LOADING)) !== null))){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n    return (\n      this.liveSocket.wrapPush(this, {timeout: true}, () => {\n        return this.channel.push(event, payload, PUSH_TIMEOUT).receive(\"ok\", resp => {\n          if(ref !== null){ this.undoRefs(ref) }\n          let finish = (hookReply) => {\n            if(resp.redirect){ this.onRedirect(resp.redirect) }\n            if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n            if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n            onLoadingDone()\n            onReply(resp, hookReply)\n          }\n          if(resp.diff){\n            this.liveSocket.requestDOMUpdate(() => {\n              let hookReply = this.applyDiff(\"update\", resp.diff, ({diff, events}) => {\n                this.update(diff, events)\n              })\n              finish(hookReply)\n            })\n          } else {\n            finish(null)\n          }\n        })\n      })\n    )\n  }\n\n  undoRefs(ref){\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.id}\"][${PHX_REF}=\"${ref}\"]`, el => {\n      let disabledVal = el.getAttribute(PHX_DISABLED)\n      // remove refs\n      el.removeAttribute(PHX_REF)\n      el.removeAttribute(PHX_REF_SRC)\n      // restore inputs\n      if(el.getAttribute(PHX_READONLY) !== null){\n        el.readOnly = false\n        el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        el.disabled = disabledVal === \"true\" ? true : false\n        el.removeAttribute(PHX_DISABLED)\n      }\n      // remove classes\n      PHX_EVENT_CLASSES.forEach(className => DOM.removeClass(el, className))\n      // restore disables\n      let disableRestore = el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        el.innerText = disableRestore\n        el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n      let toEl = DOM.private(el, PHX_REF)\n      if(toEl){\n        let hook = this.triggerBeforeUpdateHook(el, toEl)\n        DOMPatch.patchEl(el, toEl, this.liveSocket.getActiveElement())\n        if(hook){ hook.__updated() }\n        DOM.deletePrivate(el, PHX_REF)\n      }\n    })\n  }\n\n  putRef(elements, event, opts = {}){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n    if(opts.loading){ elements = elements.concat(DOM.all(document, opts.loading))}\n\n    elements.forEach(el => {\n      el.classList.add(`phx-${event}-loading`)\n      el.setAttribute(PHX_REF, newRef)\n      el.setAttribute(PHX_REF_SRC, this.el.id)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        if(disableText !== \"\"){ el.innerText = disableText }\n        el.setAttribute(\"disabled\", \"\")\n      }\n    })\n    return [newRef, elements, opts]\n  }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx, opts = {}){\n    if(isCid(targetCtx)){ return targetCtx }\n\n    let cidOrSelector = target.getAttribute(this.binding(\"target\"))\n    if(isCid(cidOrSelector)){\n      return parseInt(cidOrSelector)\n    } else if(targetCtx && (cidOrSelector !== null || opts.target)){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(isCid(targetCtx)){\n      return targetCtx\n    } else if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els, opts] = this.putRef([], \"hook\")\n    this.pushWithReply(() => [ref, els, opts], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }, (resp, reply) => onReply(reply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta, value){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      if(!meta){ meta = {} }\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined){\n      if(!meta){ meta = {} }\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    if(value){\n      if(!meta){ meta = {} }\n      for(let key in value){ meta[key] = value[key] }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta, opts = {}){\n    this.pushWithReply(() => this.putRef([el], type, opts), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta, opts.value),\n      cid: this.targetComponentID(el, targetCtx, opts)\n    })\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }, onReply)\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, opts, callback){\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx)\n    let refGenerator = () => this.putRef([inputEl, inputEl.form], \"change\", opts)\n    let formData = serializeForm(inputEl.form, {_target: opts._target})\n    if(DOM.isUploadInput(inputEl) && inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event, resp => {\n      DOM.showError(inputEl, this.liveSocket.binding(PHX_FEEDBACK_FOR))\n      if(DOM.isUploadInput(inputEl) && inputEl.getAttribute(\"data-phx-auto-upload\") !== null){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.uploadFiles(inputEl.form, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, _opts, callback] = awaitingSubmit\n      this.cancelSubmit(formEl)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _ref, _opts, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, opts, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, opts, callback])\n  }\n\n  cancelSubmit(formEl){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, opts, onReply){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let refGenerator = () => {\n      let formElements = Array.from(formEl.elements)\n      let disables = formElements.filter(filterDisables)\n      let buttons = formElements.filter(filterButton).filter(filterIgnored)\n      let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n      buttons.forEach(button => {\n        button.setAttribute(PHX_DISABLED, button.disabled)\n        button.disabled = true\n      })\n      inputs.forEach(input => {\n        input.setAttribute(PHX_READONLY, input.readOnly)\n        input.readOnly = true\n        if(input.files){\n          input.setAttribute(PHX_DISABLED, input.disabled)\n          input.disabled = true\n        }\n      })\n      formEl.setAttribute(this.binding(PHX_PAGE_LOADING), \"\")\n      return this.putRef([formEl].concat(disables).concat(buttons).concat(inputs), \"submit\", opts)\n    }\n\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      let push = () => this.pushFormSubmit(formEl, targetCtx, phxEvent, opts, onReply)\n      return this.scheduleSubmit(formEl, ref, opts, push)\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els, opts]\n      this.uploadFiles(formEl, targetCtx, ref, cid, (_uploads) => {\n        let formData = serializeForm(formEl, {})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }, onReply)\n      })\n    } else {\n      let formData = serializeForm(formEl)\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }, onReply)\n    }\n  }\n\n  uploadFiles(formEl, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      });\n\n      this.uploaders[inputEl] = uploader\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload, resp => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        if(resp.error){\n          this.undoRefs(ref)\n          let [entry_ref, reason] = resp.error\n          this.log(\"upload\", () => [`error for entry ${entry_ref}`, reason])\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  dispatchUploads(name, filesOrBlobs){\n    let inputs = DOM.findUploadInputs(this.el).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {files: filesOrBlobs}) }\n  }\n\n  pushFormRecovery(form, newCid, callback){\n    this.liveSocket.withinOwners(form, (view, targetCtx) => {\n      let input = form.elements[0]\n      let phxEvent = form.getAttribute(this.binding(PHX_AUTO_RECOVER)) || form.getAttribute(this.binding(\"change\"))\n\n      JS.exec(\"change\", phxEvent, view, input, [\"push\", {_target: input.name, newCid: newCid, callback: callback}])\n    })\n  }\n\n  pushLinkPatch(href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    let refGen = targetEl ? () => this.putRef([targetEl], \"click\") : null\n    let fallback = () => this.liveSocket.redirect(window.location.href)\n\n    let push = this.pushWithReply(refGen, \"live_patch\", {url: href}, resp => {\n      this.liveSocket.requestDOMUpdate(() => {\n        if(resp.link_redirect){\n          this.liveSocket.replaceMain(href, null, callback, linkRef)\n        } else {\n          if(this.liveSocket.commitPendingLink(linkRef)){\n            this.href = href\n          }\n          this.applyPendingUpdates()\n          callback && callback(linkRef)\n        }\n      })\n    })\n\n    if(push){\n      push.receive(\"timeout\", fallback)\n    } else {\n      fallback()\n    }\n  }\n\n  formsForRecovery(html){\n    if(this.joinCount === 0){ return [] }\n\n    let phxChange = this.binding(\"change\")\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n\n    return (\n      DOM.all(this.el, `form[${phxChange}]`)\n        .filter(form => form.id && this.ownsElement(form))\n        .filter(form => form.elements.length > 0)\n        .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n        .map(form => {\n          let newForm = template.content.querySelector(`form[id=\"${form.id}\"][${phxChange}=\"${form.getAttribute(phxChange)}\"]`)\n          if(newForm){\n            return [form, newForm, this.targetComponentID(newForm)]\n          } else {\n            return [form, null, null]\n          }\n        })\n        .filter(([form, newForm, newCid]) => newForm)\n    )\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n    if(willDestroyCIDs.length > 0){\n      this.pruningCIDs.push(...willDestroyCIDs)\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}, () => {\n        // The cids are either back on the page or they will be fully removed,\n        // so we can remove them from the pruningCIDs.\n        this.pruningCIDs = this.pruningCIDs.filter(cid => willDestroyCIDs.indexOf(cid) !== -1)\n\n        // See if any of the cids we wanted to destroy were added back,\n        // if they were added back, we don't actually destroy them.\n        let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n          return DOM.findComponentNodeList(this.el, cid).length === 0\n        })\n\n        if(completelyDestroyCIDs.length > 0){\n          this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}, (resp) => {\n            this.rendered.pruneCIDs(resp.cids)\n          })\n        }\n      })\n    }\n  }\n\n  ownsElement(el){\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      maybe(el.closest(PHX_VIEW_SELECTOR), node => node.id) === this.id\n  }\n\n  submitForm(form, targetCtx, phxEvent, opts = {}){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    let phxFeedback = this.liveSocket.binding(PHX_FEEDBACK_FOR)\n    let inputs = Array.from(form.elements)\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, opts, () => {\n      inputs.forEach(input => DOM.showError(input, phxFeedback))\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {integer} [opts.maxReloads] - The maximum reloads before entering failsafe mode.\n * @param {integer} [opts.reloadJitterMin] - The minimum time between normal reload attempts.\n * @param {integer} [opts.reloadJitterMax] - The maximum time between normal reload attempts.\n * @param {integer} [opts.failsafeJitter] - The time between reload attempts in failsafe mode.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  PHX_SESSION,\n  RELOAD_JITTER_MIN,\n  RELOAD_JITTER_MAX,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  isObject,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport JS from \"./js\"\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import {LiveSocket} from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.linkRef = 1\n    this.clickRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.maxReloads = opts.maxReloads || MAX_RELOADS\n    this.reloadJitterMin = opts.reloadJitterMin || RELOAD_JITTER_MIN\n    this.reloadJitterMax = opts.reloadJitterMax || RELOAD_JITTER_MAX\n    this.failsafeJitter = opts.failsafeJitter || FAILSAFE_JITTER\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.domCallbacks = Object.assign({onNodeAdded: closure(), onBeforeElUpdated: closure()}, opts.dom || {})\n    this.transitions = new TransitionSet()\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.removeItem(PHX_LV_DEBUG) }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    let doConnect = () => {\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      }\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){ this.socket.disconnect(callback) }\n\n  execJS(el, encodedJS, eventType = null){\n    this.owner(el, view => JS.exec(eventType, encodedJS, view, el))\n  }\n\n  // private\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  requestDOMUpdate(callback){\n    this.transitions.after(callback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.transitions.addTransition(time, onStart, onDone)\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        console.log(`simulating ${latency}ms of latency from server to client`)\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  wrapPush(view, opts, push){\n    let latency = this.getLatencySim()\n    let oldJoinCount = view.joinCount\n    if(!latency){\n      if(opts.timeout){\n        return push().receive(\"timeout\", () => {\n          if(view.joinCount === oldJoinCount && !view.isDestroyed()){\n            this.reloadWithJitter(view, () => {\n              this.log(view, \"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        })\n      } else {\n        return push()\n      }\n    }\n\n    console.log(`simulating ${latency}ms of latency from client to server`)\n    let fakePush = {\n      receives: [],\n      receive(kind, cb){ this.receives.push([kind, cb]) }\n    }\n    setTimeout(() => {\n      if(view.isDestroyed()){ return }\n      fakePush.receives.reduce((acc, [kind, cb]) => acc.receive(kind, cb), push())\n    }, latency)\n    return fakePush\n  }\n\n  reloadWithJitter(view, log){\n    view.destroy()\n    this.disconnect()\n    let minMs = this.reloadJitterMin\n    let maxMs = this.reloadJitterMax\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n    if(tries > this.maxReloads){\n      this.log(view, \"join\", () => [`exceeded ${this.maxReloads} consecutive reloads. Entering failsafe mode`])\n      afterMs = this.failsafeJitter\n    }\n    setTimeout(() => {\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.getAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash){\n    this.disconnect()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let oldMainEl = this.main.el\n    let newMainEl = DOM.cloneNode(oldMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash)\n    this.main.setRedirect(href)\n    this.transitionRemoves()\n    this.main.join((joinCount, onDone) => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        this.requestDOMUpdate(() => {\n          DOM.findPhxSticky(document).forEach(el => newMainEl.appendChild(el))\n          oldMainEl.replaceWith(newMainEl)\n          callback && callback()\n          onDone()\n        })\n      }\n    })\n  }\n\n  transitionRemoves(elements){\n    let removeAttr = this.binding(\"remove\")\n    elements = elements || DOM.all(document, `[${removeAttr}]`)\n    elements.forEach(el => {\n      if(document.body.contains(el)){ // skip children already removed\n        this.execJS(el, el.getAttribute(removeAttr), \"remove\")\n      }\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash){\n    let view = new View(el, this, null, flash)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el)) || this.main\n    if(view){ callback(view) }\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => callback(view, childEl))\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root && root.id === el.id){\n      root.destroy()\n      delete this.roots[root.id]\n    } else if(root){\n      root.destroyDescendent(el.id)\n    }\n  }\n\n  setActiveElement(target){\n    if(this.activeElement === target){ return }\n    this.activeElement = target\n    let cancel = () => {\n      if(target === this.activeElement){ this.activeElement = null }\n      target.removeEventListener(\"mouseup\", this)\n      target.removeEventListener(\"touchend\", this)\n    }\n    target.addEventListener(\"mouseup\", cancel)\n    target.addEventListener(\"touchend\", cancel)\n  }\n\n  getActiveElement(){\n    if(document.activeElement === document.body){\n      return this.activeElement || document.activeElement\n    } else {\n      // document.activeElement can be null in Internet Explorer 11\n      return document.activeElement || document.body\n    }\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents(){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    // enter failsafe reload if server has gone away intentionally, such as \"disconnect\" broadcast\n    this.socket.onClose(event => {\n      if(event.code === 1000 && this.main){\n        this.reloadWithJitter(this.main)\n      }\n    })\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    this.bindNav()\n    this.bindClicks()\n    this.bindForms()\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, targetEl, phxEvent, eventTarget) => {\n      let matchKey = targetEl.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n      JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, phxEvent, eventTarget) => {\n      if(!eventTarget){\n        let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget === \"window\"){\n        let data = this.eventMeta(type, e, targetEl)\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    window.addEventListener(\"dragover\", e => e.preventDefault())\n    window.addEventListener(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    return this.linkRef\n  }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, () => {\n            this.withinOwners(e.target, view => {\n              callback(e, event, view, e.target, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, () => {\n              this.withinOwners(el, view => {\n                callback(e, event, view, el, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    this.bindClick(\"click\", \"click\", false)\n    this.bindClick(\"mousedown\", \"capture-click\", true)\n  }\n\n  bindClick(eventName, bindingName, capture){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      if(!this.isConnected()){ return }\n      this.clickRef++\n      let clickRefWas = this.clickRef\n      let target = null\n      if(capture){\n        target = e.target.matches(`[${click}]`) ? e.target : e.target.querySelector(`[${click}]`)\n      } else {\n        target = closestPhxBinding(e.target, click)\n        this.dispatchClickAway(e, clickRefWas)\n      }\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){ return }\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      this.debounce(target, e, () => {\n        this.withinOwners(target, view => {\n          JS.exec(\"click\", phxEvent, view, target, [\"push\", {data: this.eventMeta(\"click\", e, target)}])\n        })\n      })\n    }, capture)\n  }\n\n  dispatchClickAway(e, clickRefWas){\n    let phxClickAway = this.binding(\"click-away\")\n    let phxClick = this.binding(\"click\")\n    DOM.all(document, `[${phxClickAway}]`, el => {\n      if(!(el.isSameNode(e.target) || el.contains(e.target))){\n        this.withinOwners(e.target, view => {\n          let phxEvent = el.getAttribute(phxClickAway)\n          if(JS.isVisible(el)){\n            let target = e.target.closest(`[${phxClick}]`) || e.target\n            JS.exec(\"click\", phxEvent, view, el, [\"push\", {data: this.eventMeta(\"click\", e, e.target)}])\n          }\n        })\n      }\n    })\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      this.requestDOMUpdate(() => {\n        if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n          this.main.pushLinkPatch(href, null)\n        } else {\n          this.replaceMain(href, null, () => {\n            if(root){ this.replaceRootHistory() }\n            if(typeof(scroll) === \"number\"){\n              setTimeout(() => {\n                window.scrollTo(0, scroll)\n              }, 0) // the body needs to render before we scroll.\n            }\n          })\n        }\n      })\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      let wantsNewTab = e.metaKey || e.ctrlKey || e.button === 1\n      if(!type || !this.isConnected() || !this.main || wantsNewTab){ return }\n      let href = target.href\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      if(this.pendingLink === href){ return }\n\n      this.requestDOMUpdate(() => {\n        if(type === \"patch\"){\n          this.pushHistoryPatch(href, linkState, target)\n        } else if(type === \"redirect\"){\n          this.historyRedirect(href, linkState)\n        } else {\n          throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n        }\n      })\n    }, false)\n  }\n\n  dispatchEvent(event, payload = {}){\n    DOM.dispatchEvent(window, `phx:${event}`, payload)\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => this.dispatchEvent(event, payload))\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", info)\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", info)\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(href, linkState, targetEl){\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(href, linkState, flash){\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, () => {\n        Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n        this.registerNewLocation(window.location)\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){ return }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, view => {\n        JS.exec(\"submit\", phxEvent, view, e.target, [\"push\", {}])\n      })\n    }, false)\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        let input = e.target\n        let phxEvent = input.form && input.form.getAttribute(this.binding(\"change\"))\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // detect dup because some browsers dispatch both \"input\" and \"change\"\n        if(at === currentIterations - 1 && type !== lastType){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, () => {\n          this.withinOwners(input.form, view => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            if(!DOM.isTextualInput(input)){\n              this.setActiveElement(input)\n            }\n            JS.exec(\"change\", phxEvent, view, input, [\"push\", {_target: e.target.name}])\n          })\n        })\n      }, false)\n    }\n  }\n\n  debounce(el, event, callback){\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n    DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback)\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n}\n\nclass TransitionSet {\n  constructor(){\n    this.transitions = new Set()\n    this.pendingOps = []\n    this.reset()\n  }\n\n  reset(){\n    this.transitions.forEach(timer => {\n      cancelTimeout(timer)\n      this.transitions.delete(timer)\n    })\n    this.flushPendingOps()\n  }\n\n  after(callback){\n    if(this.size() === 0){\n      callback()\n    } else {\n      this.pushPendingOp(callback)\n    }\n  }\n\n  addTransition(time, onStart, onDone){\n    onStart()\n    let timer = setTimeout(() => {\n      this.transitions.delete(timer)\n      onDone()\n      if(this.size() === 0){ this.flushPendingOps() }\n    }, time)\n    this.transitions.add(timer)\n  }\n\n  pushPendingOp(op){ this.pendingOps.push(op) }\n\n  size(){ return this.transitions.size }\n\n  flushPendingOps(){\n    this.pendingOps.forEach(op => op())\n    this.pendingOps = []\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
