"use strict";(self.webpackChunkliveviewjs_com=self.webpackChunkliveviewjs_com||[]).push([[6119],{876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,v=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1777:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7896),a=(n(2784),n(876));const i={sidebar_position:1},o="Overview",s={unversionedId:"forms-and-changesets/overview",id:"forms-and-changesets/overview",title:"Overview",description:"Forms are obviously extremely important for any web application that needs user input. Building, validating, and",source:"@site/docs/07-forms-and-changesets/overview.md",sourceDirName:"07-forms-and-changesets",slug:"/forms-and-changesets/overview",permalink:"/docs/forms-and-changesets/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Forms & Changesets",permalink:"/docs/category/forms--changesets"},next:{title:"Changesets",permalink:"/docs/forms-and-changesets/changesets"}},l={},c=[{value:"Form Bindigs",id:"form-bindigs",level:2},{value:"Changesets",id:"changesets",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Forms are obviously extremely important for any web application that needs user input. Building, validating, and\nhandling form submission is built into ",(0,a.kt)("strong",{parentName:"p"},"LiveViewJS")," forms ."),(0,a.kt)("h2",{id:"form-bindigs"},"Form Bindigs"),(0,a.kt)("p",null,"We've already reviewed the form event bindings that are available in LiveViewJS. Here is a quick summary:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"phx-change")," - This event is sent to the server along with all the form values when any form input is changed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"phx-submit")," - This event is sent to the server when the form is submitted alog with all the form values.")),(0,a.kt)("p",null,"Feel free to review form events in more detail in the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/user-events-slash-bindings/overview"},"User Events and Bindings")," section."),(0,a.kt)("h2",{id:"changesets"},"Changesets"),(0,a.kt)("p",null,'We have not yet discussed the concept of a "changeset" in LiveViewJS. At a high level a changeset is a way to parse and\nvalidate that incoming JSON data maps to the expected constraints. You will see it is a very powerful concept that\nallows you to build and validate complex forms with ease.'),(0,a.kt)("admonition",{title:"Changesets are a concept that is taken from an Elixir library called",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://hexdocs.pm/ecto/Ecto.Changeset.html"},"Ecto"),". Ecto changesets are used to validate and persist data to a\ndatabase. While ",(0,a.kt)("strong",{parentName:"p"},"LiveViewJS")," changeset are not ORM or DB releated, we've taken the concept of a changeset and adapted\nit to the Typescript world for parsing and validation. :::"),(0,a.kt)("p",{parentName:"admonition"},"We will take a deep dive into Changesets in a more detail in the next section.")))}d.isMDXComponent=!0}}]);