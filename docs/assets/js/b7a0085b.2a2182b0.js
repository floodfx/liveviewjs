"use strict";(self.webpackChunkliveviewjs_com=self.webpackChunkliveviewjs_com||[]).push([[6258],{876:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var o=r(2784);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=o.createContext({}),p=function(e){var t=o.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return o.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(r),f=n,g=c["".concat(d,".").concat(f)]||c[f]||u[f]||i;return r?o.createElement(g,a(a({ref:t},s),{},{components:r})):o.createElement(g,a({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3132:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=r(7896),n=(r(2784),r(876));const i={sidebar_position:3},a="Built-in Drag and Drop",l={unversionedId:"file-upload/drag-and-drop",id:"file-upload/drag-and-drop",title:"Built-in Drag and Drop",description:"LiveViewJS ships with built-in support for drag and drop file uploads. It is incredibly easy to use.  All you need to do is add a ` that has the phx-drop-target attribute set to the upload config ref you want to target.  For example, if you want to allow users to drag and drop files into a photos` upload config, you would do the following:",source:"@site/docs/08-file-upload/drag-and-drop.md",sourceDirName:"08-file-upload",slug:"/file-upload/drag-and-drop",permalink:"/liveviewjs/docs/file-upload/drag-and-drop",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Built-in Image Preview",permalink:"/liveviewjs/docs/file-upload/image-preview"},next:{title:"Upload Config Options",permalink:"/liveviewjs/docs/file-upload/upload-config-options"}},d={},p=[{value:"Credit where credit is due",id:"credit-where-credit-is-due",level:2}],s={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"built-in-drag-and-drop"},"Built-in Drag and Drop"),(0,n.kt)("p",null,"LiveViewJS ships with built-in support for drag and drop file uploads. It is incredibly easy to use.  All you need to do is add a ",(0,n.kt)("inlineCode",{parentName:"p"},"<div />")," that has the ",(0,n.kt)("inlineCode",{parentName:"p"},"phx-drop-target")," attribute set to the upload config ref you want to target.  For example, if you want to allow users to drag and drop files into a ",(0,n.kt)("inlineCode",{parentName:"p"},"photos")," upload config, you would do the following:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'...\nrender: (context, meta) => {\n  ...\n  <div phx-drop-target="${meta.uploads.photos.ref}">\n    Drop files here\n  </div>\n  ...\n}\n')),(0,n.kt)("p",null,"That's it!  ",(0,n.kt)("strong",{parentName:"p"},"LiveViewJS")," will automatically handle the rest.  The user will be able to drag and drop files into the div and they will be added to the entries of that upload config. \ud83e\udd2f"),(0,n.kt)("h2",{id:"credit-where-credit-is-due"},"Credit where credit is due"),(0,n.kt)("p",null,"Thanks to the Phoenix LiveView folks that built this! \ud83d\ude4c This is a great example of why we built on top of the existing LiveView client-side JS."))}u.isMDXComponent=!0}}]);